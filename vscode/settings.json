{
	"vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
	"vscode-neovim.neovimInitVimPaths.linux": "$HOME/.config/nvim/init.vim",
	"whichkey.sortOrder": "alphabetically",
	"whichkey.bindings": [
		{
			"key": ";",
			"name": "commands",
			"type": "command",
			"command": "workbench.action.showCommands"
		},
		{
			"key": "k",
			"type": "command",
			"command": "editor.action.showHover",
			"when": "editorTextFocus"
		},
		{
			"key": "d",
			"name": "Close active editor",
			"type": "command",
			"command": "workbench.action.closeActiveEditor"
		},
		{
			"key": "b",
			"name": "Buffers/Editors...",
			"type": "bindings",
			"bindings": [
				{
					"key": "b",
					"name": "Show all buffers/editors",
					"type": "command",
					"command": "workbench.action.showAllEditors"
				},
				{
					"key": "h",
					"name": "Move editor into left group",
					"type": "command",
					"command": "workbench.action.moveEditorToLeftGroup"
				},
				{
					"key": "j",
					"name": "Move editor into below group",
					"type": "command",
					"command": "workbench.action.moveEditorToBelowGroup"
				},
				{
					"key": "k",
					"name": "Move editor into above group",
					"type": "command",
					"command": "workbench.action.moveEditorToAboveGroup"
				},
				{
					"key": "l",
					"name": "Move editor into right group",
					"type": "command",
					"command": "workbench.action.moveEditorToRightGroup"
				},
				{
					"key": "m",
					"name": "Close other editors",
					"type": "command",
					"command": "workbench.action.closeOtherEditors"
				},
				{
					"key": "n",
					"name": "Next editor",
					"type": "command",
					"command": "workbench.action.nextEditor"
				},
				{
					"key": "p",
					"name": "Previous editor",
					"type": "command",
					"command": "workbench.action.previousEditor"
				},
				{
					"key": "N",
					"name": "New untitled editor",
					"type": "command",
					"command": "workbench.action.files.newUntitledFile"
				},
				{
					"key": "u",
					"name": "Reopen closed editor",
					"type": "command",
					"command": "workbench.action.reopenClosedEditor"
				},
				{
					"key": "y",
					"name": "Copy buffer to clipboard",
					"type": "commands",
					"commands": [
						"editor.action.selectAll",
						"editor.action.clipboardCopyAction",
						"cancelSelection"
					]
				}
			]
		},
		{
			"key": "e",
			"name": "Toggle Explorer",
			"type": "command",
			"command": "workbench.action.toggleSidebarVisibility"
		},
		{
			"key": "f",
			"name": "Find & Replace...",
			"type": "bindings",
			"bindings": [
				{
					"key": "f",
					"name": "File",
					"type": "command",
					"command": "editor.action.startFindReplaceAction"
				},
				{
					"key": "s",
					"name": "Symbol",
					"type": "command",
					"command": "editor.action.rename",
					"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
				},
				{
					"key": "p",
					"name": "Project",
					"type": "command",
					"command": "workbench.action.replaceInFiles"
				}
			]
		},
		{
			"key": "g",
			"name": "Git...",
			"type": "bindings",
			"bindings": [
				{
					"key": "/",
					"name": "Search Commits",
					"command": "gitlens.showCommitSearch",
					"type": "command",
					"when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
				},
				{
					"key": "a",
					"name": "Stage",
					"type": "command",
					"command": "git.stage"
				},
				{
					"key": "b",
					"name": "Checkout",
					"type": "command",
					"command": "git.checkout"
				},
				{
					"key": "B",
					"name": "Browse",
					"type": "command",
					"command": "gitlens.openFileInRemote"
				},
				{
					"key": "c",
					"name": "Commit",
					"type": "command",
					"command": "git.commit"
				},
				{
					"key": "C",
					"name": "Cherry Pick",
					"type": "command",
					"command": "gitlens.views.cherryPick"
				},
				{
					"key": "d",
					"name": "Delete Branch",
					"type": "command",
					"command": "git.deleteBranch"
				},
				{
					"key": "g",
					"name": "Graph",
					"type": "command",
					"command": "git-graph.view"
				},
				{
					"key": "h",
					"name": "Heatmap",
					"type": "command",
					"command": "gitlens.toggleFileHeatmap"
				},
				{
					"key": "f",
					"name": "Fetch",
					"type": "command",
					"command": "git.fetch"
				},
				{
					"key": "F",
					"name": "Pull From",
					"type": "command",
					"command": "git.pullFrom"
				},
				{
					"key": "i",
					"name": "Init",
					"type": "command",
					"command": "git.init"
				},
				{
					"key": "l",
					"name": "Toggle Line Blame",
					"type": "command",
					"command": "gitlens.toggleLineBlame",
					"when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
				},
				{
					"key": "L",
					"name": "Toggle GitLens",
					"type": "command",
					"command": "gitlens.toggleCodeLens",
					"when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
				},
				{
					"key": "m",
					"name": "Merge",
					"type": "command",
					"command": "git.merge"
				},
				{
					"key": "p",
					"name": "Push",
					"type": "command",
					"command": "git.push"
				},
				{
					"key": "P",
					"name": "Push",
					"type": "command",
					"command": "git.pull"
				},
				{
					"key": "s",
					"name": "Stash",
					"type": "command",
					"command": "workbench.view.scm"
				},
				{
					"key": "S",
					"name": "Status",
					"type": "command",
					"command": "gitlens.showQuickRepoStatus",
					"when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
				},
				{
					"key": "t",
					"name": "Create Tag",
					"type": "command",
					"command": "git.createTag"
				},
				{
					"key": "T",
					"name": "Delete Tag",
					"type": "command",
					"command": "git.deleteTag"
				},
				{
					"key": "U",
					"name": "Unstage",
					"type": "command",
					"command": "git.unstage"
				}
			]
		},

		{
			"key": "S",
			"name": "Insert snippet",
			"type": "command",
			"command": "editor.action.insertSnippet"
		},
		{
			"key": "j",
			"name": "LSP...",
			"type": "bindings",
			"bindings": [
				{
					"key": ";",
					"name": "Refactor",
					"type": "command",
					"command": "editor.action.refactor",
					"when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
				},
				{
					"key": "a",
					"name": "Auto Fix",
					"type": "command",
					"command": "editor.action.autoFix",
					"when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
				},
				{
					"key": "d",
					"name": "Definition",
					"type": "command",
					"command": "editor.action.revealDefinition",
					"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
				},
				{
					"key": "D",
					"name": "Declaration",
					"type": "command",
					"command": "editor.action.revealDeclaration"
				},
				{
					"key": "e",
					"name": "Errors",
					"type": "command",
					"command": "workbench.actions.view.problems"
				},
				{
					"key": "f",
					"name": "Format",
					"type": "command",
					"command": "editor.action.formatDocument",
					"when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
				},
				{
					"key": "i",
					"name": "Implementation",
					"type": "command",
					"command": "editor.action.goToImplementation",
					"when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
				},
				{
					"key": "l",
					"name": "Code Lens",
					"type": "command",
					"command": "codelens.showLensesInCurrentLine"
				},
				{
					"key": "n",
					"name": "Next Problem",
					"type": "command",
					"command": "editor.action.marker.next",
					"when": "editorFocus"
				},
				{
					"key": "N",
					"name": "Next Problem (Proj)",
					"type": "command",
					"command": "editor.action.marker.nextInFiles",
					"when": "editorFocus"
				},
				{
					"key": "o",
					"name": "Outline",
					"type": "command",
					"command": "outline.focus"
				},
				{
					"key": "p",
					"name": "Prev Problem",
					"type": "command",
					"command": "editor.action.marker.prevInFiles",
					"when": "editorFocus"
				},
				{
					"key": "P",
					"name": "Prev Problem (Proj)",
					"type": "command",
					"command": "editor.action.marker.prev",
					"when": "editorFocus"
				},
				{
					"key": "q",
					"name": "Quick Fix",
					"type": "command",
					"command": "editor.action.quickFix",
					"when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
				},
				{
					"key": "r",
					"name": "References",
					"type": "command",
					"command": "editor.action.goToReferences",
					"when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
				},
				{
					"key": "R",
					"name": "Rename",
					"type": "command",
					"command": "editor.action.rename",
					"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
				},
				{
					"key": "v",
					"name": "View All References",
					"type": "command",
					"command": "references-view.find",
					"when": "editorHasReferenceProvider"
				},
				{
					"key": "s",
					"name": "Go to Symbol (Editor)",
					"type": "command",
					"command": "workbench.action.gotoSymbol"
				},
				{
					"key": "S",
					"name": "Go to Symbol (Workspace)",
					"type": "command",
					"command": "workbench.action.showAllSymbols"
				}
			]
		},
		{
			"key": "m",
			"name": "Minimap",
			"type": "command",
			"command": "editor.action.toggleMinimap"
		},
		{
			"key": "n",
			"name": "No Highlight",
			"type": "command",
			"command": "vscode-neovim.send",
			"args": ":noh<CR>"
		},
		{
			"key": "p",
			"name": "Peek...",
			"type": "bindings",
			"bindings": [
				{
					"key": "d",
					"name": "Definition",
					"type": "command",
					"command": "editor.action.peekDefinition",
					"when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
				},
				{
					"key": "D",
					"name": "Declaration",
					"type": "command",
					"command": "editor.action.peekDeclaration"
				},
				{
					"key": "i",
					"name": "Implementation",
					"type": "command",
					"command": "editor.action.peekImplementation",
					"when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
				},
				{
					"key": "p",
					"name": "Toggle Focus",
					"type": "command",
					"command": "togglePeekWidgetFocus",
					"when": "inReferenceSearchEditor || referenceSearchVisible"
				},
				{
					"key": "r",
					"name": "References",
					"type": "command",
					"command": "editor.action.referenceSearch.trigger"
				},
				{
					"key": "t",
					"name": "Type Definition",
					"type": "command",
					"command": "editor.action.peekTypeDefinition"
				}
			]
		},
		{
			"key": "s",
			"name": "Search...",
			"type": "bindings",
			"bindings": [
				{
					"key": "f",
					"name": "Files",
					"type": "command",
					"command": "workbench.action.quickOpen"
				},
				{
					"key": "t",
					"name": "Text",
					"type": "command",
					"command": "workbench.action.findInFiles"
				}
			]
		},
		{
			"key": "t",
			"name": "Terminal...",
			"type": "bindings",
			"bindings": [
				{
					"key": "t",
					"name": "Toggle Terminal",
					"type": "command",
					"command": "workbench.action.togglePanel"
				},
				{
					"key": "T",
					"name": "Focus Terminal",
					"type": "command",
					"command": "workbench.action.terminal.toggleTerminal",
					"when": "!terminalFocus"
				}
			]
		},
		{
			"key": "u",
			"name": "UI toggles...",
			"type": "bindings",
			"bindings": [
				{
					"key": "a",
					"name": "Toggle tool/activity bar visibility",
					"type": "command",
					"command": "workbench.action.toggleActivityBarVisibility"
				},
				{
					"key": "b",
					"name": "Toggle side bar visibility",
					"type": "command",
					"command": "workbench.action.toggleSidebarVisibility"
				},
				{
					"key": "j",
					"name": "Toggle panel visibility",
					"type": "command",
					"command": "workbench.action.togglePanel"
				},
				{
					"key": "F",
					"name": "Toggle full screen",
					"type": "command",
					"command": "workbench.action.toggleFullScreen"
				},
				{
					"key": "s",
					"name": "Select theme",
					"type": "command",
					"command": "workbench.action.selectTheme"
				},
				{
					"key": "m",
					"name": "Toggle maximized panel",
					"type": "command",
					"command": "workbench.action.toggleMaximizedPanel"
				},
				{
					"key": "T",
					"name": "Toggle tab visibility",
					"type": "command",
					"command": "workbench.action.toggleTabsVisibility"
				}
			]
		},
		{
			"key": "w",
			"name": "Window...",
			"type": "bindings",
			"bindings": [
				{
					"key": "W",
					"name": "Focus previous editor group",
					"type": "command",
					"command": "workbench.action.focusPreviousGroup"
				},
				{
					"key": "r",
					"name": "Split Vertical",
					"type": "command",
					"command": "workbench.action.splitEditor"
				},
				{
					"key": "b",
					"name": "Split Horizontal",
					"type": "command",
					"command": "workbench.action.splitEditorDown"
				},
				{
					"key": "h",
					"name": "Move editor group left",
					"type": "command",
					"command": "workbench.action.moveActiveEditorGroupLeft"
				},
				{
					"key": "j",
					"name": "Move editor group down",
					"type": "command",
					"command": "workbench.action.moveActiveEditorGroupDown"
				},
				{
					"key": "k",
					"name": "Move editor group up",
					"type": "command",
					"command": "workbench.action.moveActiveEditorGroupUp"
				},
				{
					"key": "l",
					"name": "Move editor group right",
					"type": "command",
					"command": "workbench.action.moveActiveEditorGroupRight"
				},
				{
					"key": "t",
					"name": "Toggle editor group sizes",
					"type": "command",
					"command": "workbench.action.toggleEditorWidths"
				},
				{
					"key": "m",
					"name": "Maximize editor group",
					"type": "command",
					"command": "workbench.action.minimizeOtherEditors"
				},
				{
					"key": "M",
					"name": "Maximize editor group and hide side bar",
					"type": "command",
					"command": "workbench.action.maximizeEditor"
				},
				{
					"key": "=",
					"name": "Reset editor group sizes",
					"type": "command",
					"command": "workbench.action.evenEditorWidths"
				},
				{
					"key": "z",
					"name": "Combine all editors",
					"type": "command",
					"command": "workbench.action.joinAllGroups"
				},
				{
					"key": "d",
					"name": "Close editor group",
					"type": "command",
					"command": "workbench.action.closeEditorsInGroup"
				},
				{
					"key": "x",
					"name": "Close all editor groups",
					"type": "command",
					"command": "workbench.action.closeAllGroups"
				}
			]
		},
		{
			"key": "x",
			"name": "Extensions",
			"type": "command",
			"command": "workbench.view.extensions"
		},
		{
			"key": "z",
			"name": "Toggle zen mode",
			"type": "command",
			"command": "workbench.action.toggleZenMode"
		}
	],
	"gitlens.hovers.currentLine.over": "line",
	"editor.suggestSelection": "first",
	"vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
	"python.pythonPath": "/home/youshyee/.conda/envs/torch/bin/python",
	"workbench.list.automaticKeyboardNavigation": false,
	"oneDarkPro.editorTheme": "onedarkPro",
	"python.languageServer": "Microsoft",
	"editor.scrollbar.horizontal": "hidden",
	"editor.scrollbar.vertical": "hidden",
	"kite.showWelcomeNotificationOnStartup": false,
	"python.terminal.activateEnvironment": false,
	"editor.cursorBlinking": "solid",
	"editor.fontFamily": "Hack, Menlo, Monaco, 'Courier New', monospace",
	"files.exclude": {
		"**/.classpath": true,
		"**/.project": true,
		"**/.settings": true,
		"**/.factorypath": true
	},
	"window.zoomLevel": 1,
	"window.menuBarVisibility": "toggle",
	"python.dataScience.alwaysTrustNotebooks": true,
	"python.condaPath": "/opt/miniconda3/condabin/conda",
	"python.formatting.provider": "black",
	"python.insidersChannel": "daily",
	"terminal.integrated.shell.linux": "/usr/bin/fish",
	"terminal.external.linuxExec": "/usr/bin/alacritty",
	"editor.tokenColorCustomizations": {
		"[One Dark Pro]": {
			"textMateRules": [
				{
					"scope": [
						"support.class.component.open.jsx",
						"support.class.component.close.jsx",
						"entity.name.function.js"
					],
					"settings": {
						"foreground": "#61afef"
					}
				},

				{
					"scope": [
						"variable.other.constant.object.js",

						"punctuation.section.embedded.begin.jsx",
						"punctuation.section.embedded.end.jsx"
					],
					"settings": {
						"foreground": "#abb2bf"
					}
				},
				{
					"scope": ["punctuation.definition.tag.jsx"],
					"settings": {
						"foreground": "#5c6370"
					}
				},
				{
					"scope": [
						"variable.other.readwrite.js",
						"variable.other.property.js",
						"variable.parameter",
						"variable.other.object.js"
					],
					"settings": {
						"foreground": "#56b6c2"
					}
				},
				{
					"scope": ["entity.other.attribute-name.jsx"],
					"settings": {
						"foreground": "#e5c07b"
					}
				},
				{
					"scope": [
						"keyword.operator.assignment.js",
						"keyword.operator.assignment.jsx",
						"string.unquoted.js",
						"keyword.operator.typeof.js",
						"meta.embedded.expression.js",
						"constant.other.object.key.js",
						"keyword.operator.logical.js"
					],
					"settings": {
						"foreground": "#c678dd"
					}
				},
				{
					"scope": ["variable.other.constant.object.js"],
					"settings": {
						"foreground": "#e06c75"
					}
				}
			]
		}
	},

	"workbench.colorCustomizations": {
		"[Default Dark+]": {
			"statusBar.background": "#2E2E2E",
			"statusBar.foreground": "#8C8C8C",
			"statusBarItem.remoteBackground": "#2E2E2E",
			"statusBarItem.remoteForeground": "#8C8C8C",
			"activityBar.background": "#2E2E2E",
			"tab.inactiveBackground": "#2E2E2E"
		},
		"[One Dark Pro]": {
			"editor.background": "#1e2127",
			"terminal.foreground": "#abb2bf",
			"terminal.ansiBlack": "#1e2127",
			"terminal.ansiBlue": "#61afef",
			"terminal.ansiCyan": "#56b6c2",
			"terminal.ansiGreen": "#98C379",
			"terminal.ansiMagenta": "#c678dd",
			"terminal.ansiRed": "#e06c75",
			"terminal.ansiWhite": "#abb2bf",
			"terminal.ansiYellow": "#d19a66",
			"terminal.ansiBrightBlack": "#5c6370",
			"terminal.ansiBrightBlue": "#61afef",
			"terminal.ansiBrightCyan": "#56b6c2",
			"terminal.ansiBrightGreen": "#98c379",
			"terminal.ansiBrightMagenta": "#c678dd",
			"terminal.ansiBrightRed": "#e06c75",
			"terminal.ansiBrightWhite": "#ffffff",
			"terminal.ansiBrightYellow": "#d19a66"
		}
	},
	"gitlens.advanced.telemetry.enabled": false,
	"gitlens.currentLine.enabled": false,
	"python.terminal.activateEnvInCurrentTerminal": true,
	"editor.minimap.enabled": false,
	"terminal.integrated.copyOnSelection": true,
	"terminal.integrated.experimentalLinkProvider": false,
	"terminal.integrated.fontSize": 11,
	"terminal.integrated.profiles.linux": {
		"bash": {
			"path": "bash"
		},
		"zsh": {
			"path": "zsh"
		},
		"fish": {
			"path": "fish"
		},
		"tmux": {
			"path": "tmux"
		},
		"pwsh": {
			"path": "pwsh"
		}
	},
	"terminal.integrated.allowChords": false,
	"workbench.activityBar.visible": false,
	"workbench.editor.showTabs": false
}
